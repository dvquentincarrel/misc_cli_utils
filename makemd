#!/bin/bash
# Converts markdown to HTML using formatting I find saner.
# Saves the hassle of including these tags everytime, and hides the
# ghoulish cmark-gfm + sed call

read -d '' helpmsg <<EOF
Usage: makemd SOURCE [DESTINATION]
Render gfm file as html, with hljs support.
       Source file can be "-" for STDIN
       Destination file is /tmp/tmp_<SOURCE>.html by default

Example: makemd ~/my_file.md
         echo "# Test" | makemd -
         makemd ~/my_file.md ~/my_output_file.html

Option:
  -k    doesn't delete the file after
EOF

if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
   echo "$helpmsg"
   exit 0
fi

if [[ $# -eq 0 ]]; then
    echo -e "\x1b[33mError\x1b[m: You must specify an input file"
    echo "$helpmsg"
fi

src="$1"
mid_dst="/tmp/intermediary_makemd"
dst=${2:-"/tmp/tmp_makemd.html"}

# Building up intermediary file to feed to cmark-gfm
cat > "$mid_dst" <<EOF
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/monokai-sublime.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js"></script>
<style>
code {
    max-width: 50%;
}
body {
    background: #E2D6C4;
}
</style>

EOF
cat "$src" >> "$mid_dst"
echo "<script>hljs.highlightAll();</script>" >> "$mid_dst"

# Produce final file, with interactive checkboxes
cmark-gfm -e tasklist --unsafe "$mid_dst" > "$dst"
rm "$mid_dst"
sed -i 's/disabled=""//' "$dst"
firefox "$dst"&
