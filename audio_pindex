#!/bin/bash
# Requires xdotool; pacmd
# Short for Pulseaudio INDEX
# Outputs -1 if no index found, index # otherwise

if [ "$1" = '-h' ];then
	echo 'Usage: audio_pindex [OUTPUT]'
	echo 'Print PulseAudio index(es) of the sink input(s) related to to focused window'
	echo 'Example: audio_pindex | app_vol +5%'
	exit 0
fi

if [ -z "$1" ]; then
	OUTPUT="/dev/stdout"
else
	OUTPUT=$1
fi
inputs=$(pactl list sink-inputs)

function filter_by_window_name {
	# Attempt to get part of window name after which PA input is named
	raw_input_name=$(xdotool getactivewindow getwindowname)
	if grep '—' >/dev/null <<< $raw_input_name; then
		input_name=$(grep -o '^.* —' <<< $raw_input_name | rev | cut -b 6- | rev)
	elif grep '-' >/dev/null <<< $raw_input_name; then
		input_name=$(rev <<< $raw_input_name | cut -d'-' -f 2- | rev)
	else
		input_name=$raw_input_name
	fi

	# Extract one input in particular
	block=$(perl -00ne "print if /$input_name/i" <<< $inputs)
}

function filter_by_pid {
	# Attempt to use currently focused window's PID and its subprocesses PID
	# to find the relevant PA input
	win_pid=$(xdotool getactivewindow getwindowpid)
	subprocess_pids=$(pgrep -P $win_pid)
	formatted_pids="$win_pid $subprocess_pids"
	formatted_pids=${formatted_pids// /|}
	formatted_pids=${formatted_pids//$'\n'/|}
	# Extract one input in particular
	block=$(perl -00ne "print if /application.process.id = .($formatted_pids)./i" <<< $inputs)
}

filter_by_window_name
if [ -z "$block" ]; then
	echo "No input found for: $input_name" >&2
	filter_by_pid
else
	echo "Input found by name" >&2
fi

if [ -z "$block" ]; then
	echo "No input found for PIDS: $win_pid $subprocess_pids" >&2
	notify-send "No input found for '$input_name'"
	echo "-1" > $OUTPUT
else
	echo "Input found by PIDs" >&2
	# Get the input's id
	index=$(grep -E '^Sink Input #' <<< $block | cut -d'#' -f2)
	echo "$index" > $OUTPUT
fi
